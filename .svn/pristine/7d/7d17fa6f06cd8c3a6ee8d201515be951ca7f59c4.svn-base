package com.ojt.board;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class BoardController {
	@Autowired
	BoardService service;
	
	@ResponseBody
	@RequestMapping(value = "/board",  method = {RequestMethod.GET,RequestMethod.POST})
	public ModelAndView boardlist(HttpServletRequest	 request, HttpServletResponse response) throws Exception {
		System.out.println("본사 리스트");
		ModelAndView mv = new ModelAndView("/board");
		//디폴트 값 본사 석포로 선택 후 검색 누르면 석포로 검색
		String location = "본사";
		List<Map<String, Object>> result = service.SelectBoardList(location);
		
		mv.addObject("list", result);
		System.out.println(result);
		return mv;
	}
	
	@ResponseBody
	@RequestMapping(value = "/location2",  method = {RequestMethod.GET,RequestMethod.POST})
	public  List<Map<String, Object>> boardlist2(HttpServletRequest	 request, RedirectAttributes rattr, HttpServletResponse response) throws Exception {
		System.out.println("본사/석포 바꾸기");
		String location;
		String result = request.getParameter("location");
		if(result.equals("location1")) {
			location = "본사";
		}else{
			location = "석포";
		}
		
		List<Map<String, Object>> list = service.SelectBoardList(location);
		System.out.println(list);
		
		return list;
	}
	
	@ResponseBody
	@RequestMapping(value = "/searchlist",  method = {RequestMethod.GET,RequestMethod.POST})
	public  List<Map<String, Object>> searchlist(HttpServletRequest	 request, RedirectAttributes rattr, HttpServletResponse response) throws Exception {
		System.out.println("검색");
		
		HashMap<String, Object> map = new HashMap<>();
		
		String searchid = request.getParameter("searchid");
		String searchtxt = request.getParameter("searchtxt");
		
		if(searchid.equals("PRIVATE_IP")) {
			map.put("PRIVATE_IP", searchtxt);
		}else if(searchid.equals("SERVER_NAME")) {
			map.put("SERVER_NAME", searchtxt);
		}else if(searchid.equals("MANAGER")) {
			map.put("MANAGER", searchtxt);
		}
		
		System.out.println(map);
		
		List<Map<String, Object>> list = service.searchList(map);
		System.out.println(list);
		
		return list;
	}
	
	
	@RequestMapping("/write")
	public String write() {
		System.out.println("게시글 작성 페이지");
		return "write";
	}
	
	@ResponseBody
	@RequestMapping(value = "/boardsave",  method = {RequestMethod.GET,RequestMethod.POST})
	public Map<String,String> boardsave(@RequestParam HashMap<String,Object> allParameters) throws Exception {
		System.out.println("저장");
		
		int seq = service.GetSEQ();
		
		allParameters.put("seq", seq);
		System.out.println(allParameters);
		
		int result = service.Register(allParameters);
		
		Map<String, String> resultMap = new HashMap<>();
		resultMap.put("value", Integer.toString(result));
		
		System.out.println(result);
		
		return resultMap;
	}
	
	@ResponseBody
	@RequestMapping(value = "/detail",  method = {RequestMethod.GET,RequestMethod.POST})
	public ModelAndView detail(int seq, HttpServletRequest	 request, RedirectAttributes rattr, HttpServletResponse response) throws Exception {
		System.out.println("상세페이지");

		ModelAndView mv = new ModelAndView("/detail");
		List<Map<String, Object>> result = service.DetailBoard(seq);
		List<Map<String, Object>> result2 = service.DetailHistory(seq);
		
		System.out.println(result);
		System.out.println(result2);
		mv.addObject("list", result);
		mv.addObject("list2", result2);
		return mv;
	}
	
	@ResponseBody
	@RequestMapping(value = "/btnupdate", method = {RequestMethod.GET,RequestMethod.POST})
	public Map<String,String> boardupdate(HttpServletRequest request, @RequestParam HashMap<String,Object> allParameters) throws Exception {
		System.out.println("수정");
		//수정한 내역 다 가져온 것
		System.out.println(allParameters);
		
		//update문 추가하여 update
		int num = service.Updateboard(allParameters);
		Map<String, String> resultMap = new HashMap<>();
		resultMap.put("value", Integer.toString(num));
		
		System.out.println(num);
		
		return resultMap;
	}
	
	@ResponseBody
	@RequestMapping(value = "/deletelist",  method = {RequestMethod.GET,RequestMethod.POST})
	public int deletelist(@RequestParam(value="ch_list[]") List<String> ch_list) throws Exception {
		System.out.println("삭제하기");
		
		System.out.println(ch_list);
		int num = 0;
		for(int i = 0; i<ch_list.size(); i++) {
			num += service.DeleteBoard(Integer.parseInt(ch_list.get(i)));
		}
		
		if(num == ch_list.size()) {
			num = 1;
		}
		
		
		Map<String, String> resultMap = new HashMap<>();
		
		resultMap.put("value", Integer.toString(num));
		System.out.println(resultMap);
		
		return num;
	}
}
