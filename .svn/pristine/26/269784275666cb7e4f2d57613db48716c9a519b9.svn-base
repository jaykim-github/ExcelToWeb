package com.ojt.login;

import java.util.HashMap;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

@Controller
public class LoginController {

	@Autowired
	LoginService service;

	private static final Logger logger = LoggerFactory.getLogger(LoginController.class);

	@RequestMapping("/")
	public String home() {
		logger.info("로그인 페이지");
		return "index";
	}

	@RequestMapping(value = "/login", method = RequestMethod.POST)
	public String login(HttpServletRequest request, RedirectAttributes rattr, HttpServletResponse response)
			throws Exception {
		// HttpSession session = request.getSession();
		String path = "";

		String id = request.getParameter("id");
		String password = request.getParameter("password");

		// 비밀번호 입력안했을때, alert
		if (password.length() == 0) {
			rattr.addFlashAttribute("message", "비밀번호를 입력해주세요.");
			path = "redirect:/";
		} else {
			int result = service.Login(id, password);
			if (result == 1) {
				// session.setAttribute("member", result);
				path = "board";
			} else {
				rattr.addFlashAttribute("msg", false);
				path = "redirect:/";
			}
		}

		return path;
	}

	@RequestMapping(value = "/register",  method = {RequestMethod.GET,RequestMethod.POST})
	public String registerPage(RedirectAttributes rattr) {
		logger.info("회원가입 페이지");
		//rattr.addFlashAttribute("msg", true);
		//rattr.addFlashAttribute("message", null);
		return "register";
	}

	@RequestMapping(value = "/registercheck",  method = RequestMethod.POST)
	public String registerCheck(HttpServletRequest request, RedirectAttributes rattr) throws Exception {

		HashMap<String, String> map = new HashMap<>();
		String path;

		String id = request.getParameter("id");
		String password = request.getParameter("password");
		String name = request.getParameter("name");
		String email = request.getParameter("email");

		map.put("id", id);
		map.put("password", password);
		map.put("name", name);
		map.put("email", email);

		// result가 0이면, ID 중복/1이면 회원가입 성공
		int result = service.Register(map);
		System.out.println(result);

		if (result == 1) {
			// 성공 alert 띄워주고 로그인 페이지로
			rattr.addFlashAttribute("message2", "회원가입 되었습니다.");
			path = "index";
		} else {
			//ID 중복
			rattr.addFlashAttribute("msg2", false);
			path = "register";
		}

		return path;
	}

}
